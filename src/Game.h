#pragma once

////////////////////////////////////////////////////////////////////////////////
#include "Types.h"
#include "platform/SFML_Drawer.hpp"
#include "gui/Button.h"
#include "gui/TextEdit.h"
#include "Level.h"
#include "StateMachine.h"
#include "TextureCache.h"
#include "TextKeeper.h"
#include "Players.h"
#include "Projectile.h"
#include "Physics.h"
#include "WorldScroll.h"
#include <SFML/Config.hpp>
#include <SFML/Graphics/RenderWindow.hpp>
#include <SFML/System/Time.hpp>
#include <vector>
#include <stack>

////////////////////////////////////////////////////////////////////////////////
constexpr sf::Int32 FIXED_FRAME_TIME_MILLIS = 10;
constexpr float SHELL_VELOCITY = 510.F;

/// Sizes of various texts that pop-up
constexpr float TURN_NOTICE_SIZE = 40.F;
constexpr float DEATH_NOTICE_SIZE = 60.F;
constexpr float WIN_NOTICE_SIZE = 100.F;

////////////////////////////////////////////////////////////////////////////////
class SinglePlayer : public GameState {
public:

    ////////////////////////////////////////////////////////////////////////////
    SinglePlayer(sf::RenderWindow& win,
                 TextureCache& cache,
                 std::stack<std::unique_ptr<GameState>>& stack,
                 const std::string& levelName,
                 std::vector<std::string> playerNames);

    ////////////////////////////////////////////////////////////////////////////
    void ExecuteFrame() final;

private:

    ////////////////////////////////////////////////////////////////////////////
    void doPhysics();

    ////////////////////////////////////////////////////////////////////////////
    void shellExplode();

    ////////////////////////////////////////////////////////////////////////////
    void playerChange();

    ////////////////////////////////////////////////////////////////////////////
    SFML_Drawer drawer;

    ////////////////////////////////////////////////////////////////////////////
    std::vector<Player> players;

    ////////////////////////////////////////////////////////////////////////////
    WrappingInt<size_t> activePlayer;

    ////////////////////////////////////////////////////////////////////////////
    Physics::System phys;

    ////////////////////////////////////////////////////////////////////////////
    Projectile projectile;

    ////////////////////////////////////////////////////////////////////////////
    sf::Event event{};

    ////////////////////////////////////////////////////////////////////////////
    sf::Time frameTimeAccumulator{};

    ////////////////////////////////////////////////////////////////////////////
    sf::Clock frameClock{};

    ////////////////////////////////////////////////////////////////////////////
    const sf::Time fixedFrameTime{sf::milliseconds(FIXED_FRAME_TIME_MILLIS)};

    ////////////////////////////////////////////////////////////////////////////
    sf::RenderWindow& window;

    ////////////////////////////////////////////////////////////////////////////
    TextKeeper text;

    ////////////////////////////////////////////////////////////////////////////
    Level level;

    ////////////////////////////////////////////////////////////////////////////
    WorldScroll scroll;
};

////////////////////////////////////////////////////////////////////////////////
class MainMenu : public GameState {
public:

    ////////////////////////////////////////////////////////////////////////////
    MainMenu(sf::RenderWindow& win,
             TextureCache& cache,
             std::stack<std::unique_ptr<GameState>>& stack);

    ////////////////////////////////////////////////////////////////////////////
    void ExecuteFrame() final;

private:

    ////////////////////////////////////////////////////////////////////////////
    sf::RenderWindow& window;

    ////////////////////////////////////////////////////////////////////////////
    TextureCache& textureCache;

    ////////////////////////////////////////////////////////////////////////////
    std::vector<std::unique_ptr<GUI::Button>> buttons;

    ////////////////////////////////////////////////////////////////////////////
    sf::Font font;

    ////////////////////////////////////////////////////////////////////////////
    sf::FloatRect viewport{0.F, 0.F, GUI::VIEWPORT_WIDTH, GUI::VIEWPORT_HEIGHT};

    ////////////////////////////////////////////////////////////////////////////
    sf::View view{viewport};

    ////////////////////////////////////////////////////////////////////////////
    sf::Event event{};

};

////////////////////////////////////////////////////////////////////////////////
class NewGameMenu : public GameState {
public:

    ////////////////////////////////////////////////////////////////////////////
    NewGameMenu(sf::RenderWindow& win,
    TextureCache& cache,
            std::stack<std::unique_ptr<GameState>>& stack);

    ////////////////////////////////////////////////////////////////////////////
    void ExecuteFrame() final;

private:

    ////////////////////////////////////////////////////////////////////////////
    void prevLevel();

    ////////////////////////////////////////////////////////////////////////////
    void nextLevel();

    ////////////////////////////////////////////////////////////////////////////
    void createPlayersSettings(const std::string& levelName);

    ////////////////////////////////////////////////////////////////////////////
    std::vector<std::string> getPlayersOptions();

    ////////////////////////////////////////////////////////////////////////////
    sf::RenderWindow& window;

    ////////////////////////////////////////////////////////////////////////////
    TextureCache& textureCache;

    ////////////////////////////////////////////////////////////////////////////
    std::vector<std::unique_ptr<GUI::Button>> buttons;

    ////////////////////////////////////////////////////////////////////////////
    std::vector<sf::Text> playerNameLabels;

    ////////////////////////////////////////////////////////////////////////////
    std::vector<GUI::TextEdit> playerNameEdits;

    ////////////////////////////////////////////////////////////////////////////
    sf::Font font;

    ////////////////////////////////////////////////////////////////////////////
    TextKeeper text;

    ////////////////////////////////////////////////////////////////////////////
    std::vector<std::string> levels;

    ////////////////////////////////////////////////////////////////////////////
    size_t levelIndex{0};

    ////////////////////////////////////////////////////////////////////////////
    sf::FloatRect viewport{0.F, 0.F, GUI::VIEWPORT_WIDTH, GUI::VIEWPORT_HEIGHT};

    ////////////////////////////////////////////////////////////////////////////
    sf::View view{viewport};

    ////////////////////////////////////////////////////////////////////////////
    sf::Event event{};

};