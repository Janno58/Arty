#pragma once

////////////////////////////////////////////////////////////////////////////////
#include "TextureCache.h"
#include "Pixel.h"
#include <SFML/Graphics.hpp>

////////////////////////////////////////////////////////////////////////////////
class Projectile : public sf::Drawable {
public:

    ////////////////////////////////////////////////////////////////////////////
    Projectile(sf::Vector2f pos, sf::Vector2f vel);

    ////////////////////////////////////////////////////////////////////////////
    std::vector<Pixel> Explode();

    ////////////////////////////////////////////////////////////////////////////
    bool HasExploded() const;

    ////////////////////////////////////////////////////////////////////////////
    sf::Vector2f GetTheTip() const;

    ////////////////////////////////////////////////////////////////////////////
    void StepPhysics(float deltaTime);

    ////////////////////////////////////////////////////////////////////////////
    static void SetTexCache(TextureCache*);

private:

    ////////////////////////////////////////////////////////////////////////////
    void draw(sf::RenderTarget &target, sf::RenderStates states) const override;

    ////////////////////////////////////////////////////////////////////////////
    sf::Sprite sprite;

    ////////////////////////////////////////////////////////////////////////////
    sf::Vector2f velocity{100.F, 0.F};

    ////////////////////////////////////////////////////////////////////////////
    bool exploded = false;

    ///////////////////////////////////////////////////////////////////////////
    float inverseMass = 1.F/10.F;

    ////////////////////////////////////////////////////////////////////////////
    static TextureCache* texCache;

};