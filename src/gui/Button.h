#pragma once

////////////////////////////////////////////////////////////////////////////////
#include <SFML/Graphics.hpp>
#include <utility>

////////////////////////////////////////////////////////////////////////////////
namespace GUI {

////////////////////////////////////////////////////////////////////////////////
struct ButtonTextDescriptor;

////////////////////////////////////////////////////////////////////////////////
class Button : public sf::Drawable {
public:

    ////////////////////////////////////////////////////////////////////////////
    Button(std::string ident,
           sf::Vector2f pos,
           sf::Vector2f size,
           const ButtonTextDescriptor& desc);

    ////////////////////////////////////////////////////////////////////////////
    void DoEvent(const sf::Event& event);

    ////////////////////////////////////////////////////////////////////////////
    void MouseMove(sf::Vector2f mousePos);

    ////////////////////////////////////////////////////////////////////////////
    std::string ID() const { return identifier; };

    ////////////////////////////////////////////////////////////////////////////
    bool Clicked() { return std::exchange(clicked, false); }

    ////////////////////////////////////////////////////////////////////////////
    void SetText(const std::string& str) { text.setString(str); }

private:

    ////////////////////////////////////////////////////////////////////////////
    void draw(sf::RenderTarget& target, sf::RenderStates states) const final;

    ////////////////////////////////////////////////////////////////////////////
    std::string identifier;

    ////////////////////////////////////////////////////////////////////////////
    sf::Vector2f position;

    ////////////////////////////////////////////////////////////////////////////
    sf::Text text;

    ////////////////////////////////////////////////////////////////////////////
    const sf::Texture* texture;

    ////////////////////////////////////////////////////////////////////////////
    const sf::Texture* textureHover;

    ////////////////////////////////////////////////////////////////////////////
    std::vector<sf::Vertex> vertices;

    ////////////////////////////////////////////////////////////////////////////
    sf::FloatRect boundingBox;

    ////////////////////////////////////////////////////////////////////////////
    bool hovered{false};

    ////////////////////////////////////////////////////////////////////////////
    bool clicked{false};

};

////////////////////////////////////////////////////////////////////////////////
constexpr unsigned int DEFAULT_BUTTON_TEXT_SIZE = 40;

////////////////////////////////////////////////////////////////////////////////
struct ButtonTextDescriptor {

    ////////////////////////////////////////////////////////////////////////////
    sf::String text{};

    ////////////////////////////////////////////////////////////////////////////
    unsigned int size{DEFAULT_BUTTON_TEXT_SIZE};

    ////////////////////////////////////////////////////////////////////////////
    sf::Color color{sf::Color::Black};

    ////////////////////////////////////////////////////////////////////////////
    sf::Texture* texture1{nullptr};

    ////////////////////////////////////////////////////////////////////////////
    sf::Texture* texture2{nullptr};

    ////////////////////////////////////////////////////////////////////////////
    sf::Font* font{nullptr};

};

} /* ns GUI */